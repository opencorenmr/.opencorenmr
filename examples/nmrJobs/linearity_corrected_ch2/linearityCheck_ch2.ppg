// 
version=2.0;

uses = defaultGates.gate;
// defaultGates.gate is located in the "gates" folder in the ~/.opencorenmr directory

transform F2Freq=#+180;
// DDS(II) signal is to be down-converted with an intermediate frequency of 180 MHz.
// Accordingly, we want it generating the frequency 180 MHz above the carrier freq.


Transform F2Amp=
	 0.84107 * #
	- 0.000245193 * pow(#,2)
	+ 0.000116477  * pow(#,3)
	- 2.77982e-06 * pow(#,4)
	+ 1.79358e-08 * pow(#,5);

//Final set of parameters            Asymptotic Standard Error
//=======================            ==========================
//a               = -0.382576        +/- 0.07391      (19.32%)
//b               = 0.84107          +/- 0.01458      (1.733%)
//c               = -0.000245193     +/- 0.0008892    (362.7%)
//d               = 0.000116477      +/- 2.219e-05    (19.05%)
//e               = -2.77982e-06     +/- 2.405e-07    (8.653%)
//f               = 1.79358e-08      +/- 9.415e-10    (5.249%)

CLK=160;  // PPG Clock frequency 

freq f2=30.3; 

amp a=100; 


const int AD9858_2GHZ_DISABLE=16472; 
// This is not going to be altered, and thus is declared with "const",
// so that it does not appear in the variable edit table.

//-----  aux parameters  -----
aux PD=0.2s(Pulse Delay); 
aux NA=20(Number of Accum); 
aux DW=5u(DWell time); 
aux AL=100(Acquisition Length); 
aux ND=0(Number of Dummy scans); 

//----- phase cycle  -----
phaselist pList=(ch2; x,-x);
acqphase=x,-x;

// Any command before "start" should finish with a semicolon (;).
start   
// Implementation begins with a "start" command.
// Commands between "start" and "init" is implemented ONCE for each run.

  pulse(50n; F2FreqRST)
//  AD9858 (DDS chip) initialization
  pulse(50n; F2Freq(setup;AD9858_2GHz_DISABLE))
//  We use a 1 GHz clock, and disable 2 GHz divider, 

  delay(1m)
  pulse(5000n; F2Freq(f2))
  delay(1m)

Init // Commeands between "Init" and "Relax" are repeated NA(+ND) times.  
  pulse(10u;                           F2_Unblank, RG, F1TTL1)
  pulse(50n;                           F2_Unblank, RG, ST)
  pulse[al](dw*al; F2Amp(a*#/al), pList, F2_Gate, F2_Unblank,RG)
  delay(10m)
relax   

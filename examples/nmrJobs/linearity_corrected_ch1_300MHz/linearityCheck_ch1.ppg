// 
version=2.0;

uses = MRIGates.gate;
// defaultGates.gate is located in the ~/.opencorenmr/gates/ directory.

transform F1Amp =  0
                + 1.22537 * # 
                - 0.0552054 * pow(#,2)
                + 0.00171887 * pow(#,3)
                - 2.24909e-005 * pow(#,4)
                + 1.05829e-007 * pow(#,5);


//Final set of parameters            Asymptotic Standard Error
//=======================            ==========================
//a               = -0.708922        +/- 0.3962       (55.88%)
//b               = 1.22537          +/- 0.08514      (6.948%)
//c               = -0.0552054       +/- 0.005293     (9.587%)
//d               = 0.00171887       +/- 0.0001311    (7.627%)
//e               = -2.24909e-005    +/- 1.399e-006   (6.221%)
//f               = 1.05829e-007     +/- 5.378e-009   (5.082%)

transform F1Freq=#-180;
// DDS(II) signal is to be down-converted with an intermediate frequency of 180 MHz.
// Accordingly, we want it generating the frequency 180 MHz above the carrier freq.

CLK=160;  // PPG Clock frequency 

freq f1=300.48; 

amp a=100; 


const int AD9858_2GHZ_DISABLE=16472; 
// This is not going to be altered, and thus is declared with "const",
// so that it does not appear in the variable edit table.

//-----  aux parameters  -----
aux PD=0.2s(Pulse Delay); 
aux NA=100(Number of Accum); 
aux DW=5u(DWell time); 
aux AL=100(Acquisition Length); 
aux ND=0(Number of Dummy scans); 

//----- phase cycle  -----
phaselist pList=(ch1; x,-x);
acqphase=x,-x;

// Any command before "start" should finish with a semicolon (;).
start   
// Implementation begins with a "start" command.
// Commands between "start" and "init" is implemented ONCE for each run.

  pulse(50n; F1FreqRST)
//  AD9858 (DDS chip) initialization
  pulse(50n; F1Freq(setup;AD9858_2GHz_DISABLE))
//  We use a 1 GHz clock, and disable 2 GHz divider, 

  delay(1m)
  pulse(5000n; F1Freq(f1))
  delay(1m)

Init // Commeands between "Init" and "Relax" are repeated NA(+ND) times.  
  pulse(10u;                           F1_Unblank, RG, F1TTL1)
  pulse(50n;                           F1_Unblank, RG, ST)
  pulse[al](dw*al; F1Amp(a*#/al), pList, F1_Gate, F1_Unblank,RG)
  delay(10m)
relax   

version=2.0;

uses = defaultGates.gate;

transform F1Freq=#+180; // down-convert generation
transform F2Freq=#+180; // down-convert generation
transform F3Freq=#-180; // up-convert generation
transform F1Amp = 0.367938
	+ 0.804824 * #
	+ 0.00444317 * pow(#,2)
	- 7.79459e-05 * pow(#,3)
	+ 7.84528e-07 * pow(#,4)
	- 2.67529e-09 * pow(#,5);
Transform F2Amp=0.831747
	+ 0.798307 * #
	- 0.00397388 * pow(#,2)
	+ 8.4035e-05 * pow(#,3)
	- 4.53503e-07 * pow(#,4)
	+ 1.94319e-09 * pow(#,5);
transform F3Amp = 1.43963
	+ 2.54666 * #
	- 0.0820398 * pow(#,2)
	+ 0.00176282 * pow(#,3)
	- 1.82567e-05 * pow(#,4)
	+ 7.25197e-08 * pow(#,5);

CLK=160;  // PPG Clock frequency

double aXScale=2; 
double aYScale=4.1; 
double aHScale=0.855; 

freq f1=100.646388; 
double f1Offset_kHz=0; 

freq f2=40.55605; 
double f2Offset_kHz=0; 

freq f3=400.2244; 
double f3Offset_kHz=0; 

amp aYCP=20; 
amp aH90=100; 
amp aHCP=30; 
amp aHWidth=10; 
amp aHDec=80; 

int nRamp=11; 

phase ph1=0; 
phase ph2=10; 

time pw90H=2.5u; 
time ct=0.5m; 
time pw_tppm=6.25u; 
time rd=20u(receiver delay); 
time ad=20u(acquisition delay); 

const int AD9858_2GHZ_DISABLE=16472; 
// This is not going to be altered, and thus is declared with "const",
// so that it does not appear in the variable edit table.

//-----  aux parameters  -----
aux PD=5s(Pulse Delay); 
aux NA=20(Number of Accum); 
aux DW=10u(DWell time); 
aux AL=4096(Acquisition Length); 
aux ND=0(Number of Dummy scans); 

//----- phase cycle  -----
phaselist pList=(ch3; y,-y);
acqphase=x,-x;

// Any command before "start" should finish with a semicolon (;).
start
// Implementation begins with a "start" command.
// Commands between "start" and "init" is implemented ONCE for each run.

  pulse(50n; F1FreqRST, F2FreqRST, F3FreqRST)
//  AD9858 (DDS chip) initialization
  pulse(50n; F1Freq(setup;AD9858_2GHz_DISABLE),
             F2Freq(setup;AD9858_2GHz_DISABLE),
             F3Freq(setup;AD9858_2GHz_DISABLE))
//  We use a 1 GHz clock, and disable 2 GHz divider,

  delay(1m)
  pulse(5000n; F1Freq(f1+0.001*f1Offset_kHz),
               F2Freq(f2+0.001*f2Offset_kHz),
               F3Freq(f3+0.001*f3Offset_kHz))
  delay(1m)

Init
  pulse(10u;                      F2_Unblank, F3_Unblank, F1TTL1)
  pulse(pw90H;                      F2_Unblank, F3Amp(aHScale*aH90), pList, F3_Gate, F3_Unblank)
  pulse[nRamp](ct; F2Amp(aYScale*aYCP), F2_Gate, F2_Unblank,
               F3Amp(aHScale*(aHCP+aHWidth*(-0.5+#/10))), F3_Gate, F3_Unblank)
  async(tppm)
  pulse(rd)
  pulse(ad;        RG)
  pulse(dw*al; ST, RG)
  sync(3)
relax


async(3;tppm)
  pulse(pw_tppm;  F3Phase(ph1), F3Amp(aHScale*aHDec), F3_Gate, F3_Unblank)
  pulse(pw_tppm;  F3Phase(ph2), F3Amp(aHScale*aHDec), F3_Gate, F3_Unblank)
continue
